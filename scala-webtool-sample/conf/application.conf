play.crypto.secret = "changeme"

play.i18n.langs = [ "en" ]

db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:~/test"
#db.default.url="jdbc:h2:tcp://localhost/~/test"
db.default.username=sa
db.default.password=""

play.application.loader = "webtool.web.play.PlayConfigListener"
esConfig = "../config/scala-webtool.xml"

##
## Akka
##
play.akka.actor-system = "ClusterSystem"
akka.actor.default-dispatcher.fork-join-executor.parallelism-max = 64

akka {
  # Logging of Dead Letters
  # By default messages sent to dead letters are logged at info level. 
  # Existence of dead letters does not necessarily indicate a problem, but it might be, 
  # and therefore they are logged by default. After a few messages this logging is 
  # turned off, to avoid flooding the logs. You can disable this logging completely 
  # or adjust how many dead letters that are logged. During system shutdown it is 
  # likely that you see dead letters, since pending messages in the actor mailboxes 
  # are sent to dead letters. You can also disable logging of dead letters during 
  # shutdown.
  log-dead-letters = 10
  log-dead-letters-during-shutdown = on
  
  loglevel = DEBUG
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    
    deployment {
        /serviceRouter {
            router = random-pool
            routees.paths = ["/user/preActor"]
            cluster {
              enabled = on
              allow-local-routees = on
              #use-role = compute
            }
        }
    }
    
    debug {
      receive = on
      lifecycle = on
    }
    serializers {
      java = "akka.serialization.JavaSerializer"
    }
    serialization-bindings {
      "webtool.util.ep.ElasticParam" = java
      "webtool.util.ep.ColumnInfo" = java
      "webtool.util.ep.Dataset" = java
      "webtool.util.ep.Record" = java
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551"]

    auto-down-unreachable-after = 10s
    distributed-data {
      # Actor name of the Replicator actor, /system/ddataReplicator
      name = ddataReplicator
    }
  }

  akka.extensions = ["akka.cluster.pubsub.DistributedPubSub"]
}
